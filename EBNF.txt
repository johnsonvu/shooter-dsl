PROGRAM ::= GAME_DEF OBJECT_MODIFIER* FUNCTION_DEC*

GAME_DEF ::= "make game" IDENTIFIER "{" "height = " NUMBER ", width = " NUMBER" "}" "{" GAME_STATEMENT* "}"

OBJECT_MODIFIER ::= "set" IDENTIFIER "{" PROPERTY_STATEMENTS "}"

PROPERTY_STATEMENTS ::= PROPERTY_STATEMENT* ("behave = " IDENTIFIER)?

PROPERTY_STATEMENT  ::= PROPERTY "=" (NUMBER | DIRECTION)

STATEMENT :: = GAME_STATEMENT | BEHAVE_STATEMENT | PROPERTY_STATEMENT

GAME_STATEMENT ::= MAKE_STATEMENT | FOR_LOOP

MAKE_STATEMENT ::=  "make" NUMBER? TYPE IDENTIFIER

BEHAVE_STATEMENT ::= MOVEMENT_STATEMENT | SHOOT_STATEMENT

MOVEMENT_STATEMENT ::= "move" NUMBER DIRECTION

SHOOT_STATEMENT ::= "shoot" DIRECTION

/*   FOR_LOOP ::= "for" (int i = 0, i<100, i++) */ Do we want to implement this?

FUNCTION_DEC ::= "define" IDENTIFIER "(" (PARAM,)* PARAM? ")" BLOCK

FUNCITON_CALL ::= "call" IDENTIFIER "(" (PARAM,)* PARAM? ")"

BLOCK ::= "{" STATEMENT* "}"

PROPERTY ::= "damage" | "health"

//REACT_STATEMENT ::=

IF_STATEMENT ::= "if (" CONDITION ")" BLOCK //DO LATER

GAME_STATE ::= win | lose

TYPE ::= "player" | "projectile" | "enemy" | "item"

IDENTIFIER ::= [A-Z|a-z|0-9]+

NUMBER ::= [0-9]+

CONDITION ::= IDENTIFIER (">"| "<" | "=") IDENTIFIER

DIRECTION ::= UP | DOWN | LEFT | RIGHT

VARDEC ::= "new" IDENTIFIER

VARSET ::= IDENTIFIER "=" EXPR

EXPR ::= EXPR OP EXPR

EXPR ::= IDENTIFIER | NUMBER

OP ::= "+" | "-" | "/" | "*"
